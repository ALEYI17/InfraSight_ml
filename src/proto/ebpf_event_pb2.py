# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/ebpf_event.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x16proto/ebpf_event.proto\x12\x02pb\"\x95\x06\n\tEbpfEvent\x12\x0b\n\x03pid\x18\x01 \x01(\r\x12\x0b\n\x03uid\x18\x02 \x01(\r\x12\x0c\n\x04\x63omm\x18\x03 \x01(\t\x12\x14\n\x0ctimestamp_ns\x18\x04 \x01(\x04\x12\x19\n\x11timestamp_ns_exit\x18\x05 \x01(\x04\x12\x12\n\nlatency_ns\x18\x06 \x01(\x04\x12\x12\n\nevent_type\x18\x07 \x01(\t\x12\x11\n\tnode_name\x18\x08 \x01(\t\x12\x0c\n\x04user\x18\t \x01(\t\x12\x0c\n\x04ppid\x18\n \x01(\r\x12\x0b\n\x03gid\x18\x0b \x01(\r\x12\x11\n\tcgroup_id\x18\x0c \x01(\x04\x12\x13\n\x0b\x63group_name\x18\r \x01(\t\x12\x10\n\x08user_pid\x18\x0e \x01(\r\x12\x11\n\tuser_ppid\x18\x0f \x01(\r\x12\x19\n\x11timestamp_unix_ms\x18\x10 \x01(\x03\x12\x14\n\x0c\x63ontainer_id\x18\x11 \x01(\t\x12\x17\n\x0f\x63ontainer_image\x18\x12 \x01(\t\x12\x45\n\x15\x63ontainer_labels_json\x18\x13 \x03(\x0b\x32&.pb.EbpfEvent.ContainerLabelsJsonEntry\x12!\n\x05snoop\x18\x14 \x01(\x0b\x32\x10.pb.SnooperEventH\x00\x12#\n\x07network\x18\x15 \x01(\x0b\x32\x10.pb.NetworkEventH\x00\x12!\n\x06ptrace\x18\' \x01(\x0b\x32\x0f.pb.PtraceEventH\x00\x12\x1d\n\x04mmap\x18/ \x01(\x0b\x32\r.pb.MmapEventH\x00\x12\x1f\n\x05mount\x18\x35 \x01(\x0b\x32\x0e.pb.MountEventH\x00\x12%\n\x08resource\x18@ \x01(\x0b\x32\x11.pb.ResourceEventH\x00\x12$\n\x08sys_freq\x18\x43 \x01(\x0b\x32\x10.pb.SysFreqEventH\x00\x12.\n\x10syscall_freq_agg\x18I \x01(\x0b\x32\x12.pb.SyscallFreqAggH\x00\x1a:\n\x18\x43ontainerLabelsJsonEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\t\n\x07payload\"5\n\x0cSnooperEvent\x12\x10\n\x08\x66ilename\x18\x16 \x01(\t\x12\x13\n\x0breturn_code\x18\x17 \x01(\x03\"\xb1\x01\n\x0cNetworkEvent\x12\x13\n\x0breturn_code\x18\x18 \x01(\x03\x12\x0f\n\x07saddrv4\x18\x19 \x01(\t\x12\x0f\n\x07\x64\x61\x64\x64rv4\x18\x1a \x01(\t\x12\r\n\x05sport\x18\x1b \x01(\t\x12\r\n\x05\x64port\x18\x1c \x01(\t\x12\x11\n\tsa_family\x18\x1d \x01(\t\x12\x0f\n\x07saddrv6\x18\x1e \x01(\t\x12\x0f\n\x07\x64\x61\x64\x64rv6\x18\x1f \x01(\t\x12\x17\n\x0fresolved_domain\x18  \x01(\t\"y\n\x0bPtraceEvent\x12\x0f\n\x07request\x18! \x01(\x03\x12\x12\n\ntarget_pid\x18\" \x01(\x03\x12\x0c\n\x04\x61\x64\x64r\x18# \x01(\x04\x12\x0c\n\x04\x64\x61ta\x18$ \x01(\x04\x12\x13\n\x0breturn_code\x18% \x01(\x03\x12\x14\n\x0crequest_name\x18& \x01(\t\"q\n\tMmapEvent\x12\x0c\n\x04\x61\x64\x64r\x18( \x01(\x04\x12\x0b\n\x03len\x18) \x01(\x04\x12\x0c\n\x04prot\x18* \x01(\x04\x12\r\n\x05\x66lags\x18+ \x01(\x04\x12\n\n\x02\x66\x64\x18, \x01(\x04\x12\x0b\n\x03off\x18- \x01(\x04\x12\x13\n\x0breturn_code\x18. \x01(\x03\"b\n\nMountEvent\x12\x10\n\x08\x64\x65v_name\x18\x30 \x01(\t\x12\x10\n\x08\x64ir_name\x18\x31 \x01(\t\x12\x0c\n\x04type\x18\x32 \x01(\t\x12\r\n\x05\x66lags\x18\x33 \x01(\x04\x12\x13\n\x0breturn_code\x18\x34 \x01(\x03\"\xe1\x01\n\rResourceEvent\x12\r\n\x05\x43puNs\x18\x36 \x01(\x01\x12\x12\n\nUserFaults\x18\x37 \x01(\x04\x12\x14\n\x0cKernelFaults\x18\x38 \x01(\x04\x12\x13\n\x0bVmMmapBytes\x18\x39 \x01(\x01\x12\x15\n\rVmMunmapBytes\x18: \x01(\x01\x12\x16\n\x0eVmBrkGrowBytes\x18; \x01(\x01\x12\x18\n\x10VmBrkShrinkBytes\x18< \x01(\x01\x12\x14\n\x0c\x42ytesWritten\x18= \x01(\x01\x12\x11\n\tBytesRead\x18> \x01(\x01\x12\x10\n\x08isActive\x18? \x01(\r\"1\n\x0cSysFreqEvent\x12\x12\n\nsyscall_id\x18\x41 \x01(\r\x12\r\n\x05\x63ount\x18\x42 \x01(\x04\"/\n\x0c\x43ollectorAck\x12\x0e\n\x06status\x18\x44 \x01(\t\x12\x0f\n\x07message\x18\x45 \x01(\t\"3\n\x05\x42\x61tch\x12\x0c\n\x04type\x18\x46 \x01(\t\x12\x1c\n\x05\x62\x61tch\x18G \x03(\x0b\x32\r.pb.EbpfEvent\"%\n\x0eSyscallFreqAgg\x12\x13\n\x0bvector_json\x18H \x01(\t2k\n\x0e\x45ventCollector\x12/\n\nSendEvents\x12\r.pb.EbpfEvent\x1a\x10.pb.CollectorAck(\x01\x12(\n\tSendBatch\x12\t.pb.Batch\x1a\x10.pb.CollectorAckB!Z\x1f\x65\x62pf_loader/internal/grpc/pb;pbb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'proto.ebpf_event_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\037ebpf_loader/internal/grpc/pb;pb'
  _globals['_EBPFEVENT_CONTAINERLABELSJSONENTRY']._loaded_options = None
  _globals['_EBPFEVENT_CONTAINERLABELSJSONENTRY']._serialized_options = b'8\001'
  _globals['_EBPFEVENT']._serialized_start=31
  _globals['_EBPFEVENT']._serialized_end=820
  _globals['_EBPFEVENT_CONTAINERLABELSJSONENTRY']._serialized_start=751
  _globals['_EBPFEVENT_CONTAINERLABELSJSONENTRY']._serialized_end=809
  _globals['_SNOOPEREVENT']._serialized_start=822
  _globals['_SNOOPEREVENT']._serialized_end=875
  _globals['_NETWORKEVENT']._serialized_start=878
  _globals['_NETWORKEVENT']._serialized_end=1055
  _globals['_PTRACEEVENT']._serialized_start=1057
  _globals['_PTRACEEVENT']._serialized_end=1178
  _globals['_MMAPEVENT']._serialized_start=1180
  _globals['_MMAPEVENT']._serialized_end=1293
  _globals['_MOUNTEVENT']._serialized_start=1295
  _globals['_MOUNTEVENT']._serialized_end=1393
  _globals['_RESOURCEEVENT']._serialized_start=1396
  _globals['_RESOURCEEVENT']._serialized_end=1621
  _globals['_SYSFREQEVENT']._serialized_start=1623
  _globals['_SYSFREQEVENT']._serialized_end=1672
  _globals['_COLLECTORACK']._serialized_start=1674
  _globals['_COLLECTORACK']._serialized_end=1721
  _globals['_BATCH']._serialized_start=1723
  _globals['_BATCH']._serialized_end=1774
  _globals['_SYSCALLFREQAGG']._serialized_start=1776
  _globals['_SYSCALLFREQAGG']._serialized_end=1813
  _globals['_EVENTCOLLECTOR']._serialized_start=1815
  _globals['_EVENTCOLLECTOR']._serialized_end=1922
# @@protoc_insertion_point(module_scope)
